object CheckCommand "Invoke-IcingaCheckMSSQLResource" {
    import "PowerShell Base"

    arguments += {
        "-SqlUsername" = {
            set_if = {{
                var str = macro("$IcingaCheckMSSQLResource_String_SqlUsername$"); if (len(str) == 0) { return false; }; return true;
            }}
            description = "The username for connecting to the MSSQL database"
            value = {{
                var str = macro("$IcingaCheckMSSQLResource_String_SqlUsername$");
                var argLen = len(str);
                if (argLen == 0) {
                    return;
                }
                if (argLen != 0 && str.substr(0,1) == "'" && str.substr(argLen - 1, argLen) == "'") {
                    return str;
                }
                return ("'" + str + "'");
            }}
            order = 8
        }
        "-AverageLatchWaitTimeWarning" = {
            description = "Warning threshold for the Average Latch Wait Time (ms) for latch requests that had to wait."
            value = "$IcingaCheckMSSQLResource_Object_AverageLatchWaitTimeWarning$"
            order = 5
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckMSSQLResource_Switchparameter_NoPerfData$"
            order = 99
        }
        "-SqlPort" = {
            description = "The port of the MSSQL server/instance to connect to with the provided credentials"
            value = "$IcingaCheckMSSQLResource_Int32_SqlPort$"
            order = 11
        }
        "-C" = {
            value = "try { Use-Icinga -Minimal; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; Write-Output 'Error:' $$($$_.Exception.Message)Components:`r`n$$( Get-Module -ListAvailable 'icinga-powershell-*' )`r`n'Module-Path:'`r`n$$($$Env:PSModulePath); exit 3; }; Exit-IcingaExecutePlugin -Command 'Invoke-IcingaCheckMSSQLResource' "
            order = 0
        }
        "-AverageLatchWaitTimeCritical" = {
            description = "Critical threshold for the Average Latch Wait Time (ms) for latch requests that had to wait."
            value = "$IcingaCheckMSSQLResource_Object_AverageLatchWaitTimeCritical$"
            order = 4
        }
        "-ThresholdInterval" = {
            set_if = {{
                var str = macro("$IcingaCheckMSSQLResource_String_ThresholdInterval$"); if (len(str) == 0) { return false; }; return true;
            }}
            description = "Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/service/10-Register-Service-Checks/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring."
            value = {{
                var str = macro("$IcingaCheckMSSQLResource_String_ThresholdInterval$");
                var argLen = len(str);
                if (argLen == 0) {
                    return;
                }
                if (argLen != 0 && str.substr(0,1) == "'" && str.substr(argLen - 1, argLen) == "'") {
                    return str;
                }
                return ("'" + str + "'");
            }}
            order = 100
        }
        "-BufferCacheHitRatioCritical" = {
            description = "Warning threshold for the Buffer cache hit ratio which Indicates the percentage of pages found in the buffer cache without having to read from disk. The ratio is the total number of cache hits divided by the total number of cache lookups over the last few thousand page accesses. After a long period of time, the ratio moves very little. Because reading from the cache is much less expensive than reading from disk, you want this ratio to be high. Generally, you can increase the buffer cache hit ratio by increasing the amount of memory available to SQL Server or by using the buffer pool extension feature."
            value = "$IcingaCheckMSSQLResource_Object_BufferCacheHitRatioCritical$"
            order = 6
        }
        "-BufferCacheHitRatioWarning" = {
            description = "Warning threshold for the Buffer cache hit ratio which Indicates the percentage of pages found in the buffer cache without having to read from disk. The ratio is the total number of cache hits divided by the total number of cache lookups over the last few thousand page accesses. After a long period of time, the ratio moves very little. Because reading from the cache is much less expensive than reading from disk, you want this ratio to be high. Generally, you can increase the buffer cache hit ratio by increasing the amount of memory available to SQL Server or by using the buffer pool extension feature."
            value = "$IcingaCheckMSSQLResource_Object_BufferCacheHitRatioWarning$"
            order = 7
        }
        "-IntegratedSecurity" = {
            set_if = "$IcingaCheckMSSQLResource_Switchparameter_IntegratedSecurity$"
            order = 99
        }
        "-PageLifeExpectancyCritical" = {
            description = "Critical threshold for the page life expectancy which indicates the number of seconds a page will stay in the buffer pool without references."
            value = "$IcingaCheckMSSQLResource_Object_PageLifeExpectancyCritical$"
            order = 2
        }
        "-SqlHost" = {
            set_if = {{
                var str = macro("$IcingaCheckMSSQLResource_String_SqlHost$"); if (len(str) == 0) { return false; }; return true;
            }}
            description = "The IP address or FQDN to the MSSQL server to connect to"
            value = {{
                var str = macro("$IcingaCheckMSSQLResource_String_SqlHost$");
                var argLen = len(str);
                if (argLen == 0) {
                    return;
                }
                if (argLen != 0 && str.substr(0,1) == "'" && str.substr(argLen - 1, argLen) == "'") {
                    return str;
                }
                return ("'" + str + "'");
            }}
            order = 10
        }
        "-Verbosity" = {
            description = "Changes the behavior of the plugin output which check states are printed: 0 (default): Only service checks/packages with state not OK will be printed 1: Only services with not OK will be printed including OK checks of affected check packages including Package config 2: Everything will be printed regardless of the check state 3: Identical to Verbose 2, but prints in addition the check package configuration e.g (All must be [OK])e"
            value = "$IcingaCheckMSSQLResource_Int32_Verbosity$"
            order = 13
        }
        "-SqlPassword" = {
            description = "The password for connecting to the MSSQL database as secure string"
            value = "(ConvertTo-IcingaSecureString '$IcingaCheckMSSQLResource_Securestring_SqlPassword$')"
            order = 9
        }
        "-SqlDatabase" = {
            set_if = {{
                var str = macro("$IcingaCheckMSSQLResource_String_SqlDatabase$"); if (len(str) == 0) { return false; }; return true;
            }}
            description = "The name of a specific database to connect to. Leave empty to connect 'globally'"
            value = {{
                var str = macro("$IcingaCheckMSSQLResource_String_SqlDatabase$");
                var argLen = len(str);
                if (argLen == 0) {
                    return;
                }
                if (argLen != 0 && str.substr(0,1) == "'" && str.substr(argLen - 1, argLen) == "'") {
                    return str;
                }
                return ("'" + str + "'");
            }}
            order = 12
        }
        "-PageLifeExpectancyWarning" = {
            description = "Warning threshold for the page life expectancy which indicates the number of seconds a page will stay in the buffer pool without references."
            value = "$IcingaCheckMSSQLResource_Object_PageLifeExpectancyWarning$"
            order = 3
        }
    }
    vars.IcingaCheckMSSQLResource_Switchparameter_IntegratedSecurity = false
    vars.ifw_api_arguments = {
        "SqlPort" = {
            value = "$IcingaCheckMSSQLResource_Int32_SqlPort$"
        }
        "AverageLatchWaitTimeCritical" = {
            value = "$IcingaCheckMSSQLResource_Object_AverageLatchWaitTimeCritical$"
        }
        "ThresholdInterval" = {
            value = "$IcingaCheckMSSQLResource_String_ThresholdInterval$"
        }
        "BufferCacheHitRatioCritical" = {
            value = "$IcingaCheckMSSQLResource_Object_BufferCacheHitRatioCritical$"
        }
        "AverageLatchWaitTimeWarning" = {
            value = "$IcingaCheckMSSQLResource_Object_AverageLatchWaitTimeWarning$"
        }
        "SqlPassword" = {
            value = "$IcingaCheckMSSQLResource_Securestring_SqlPassword$"
        }
        "NoPerfData" = {
            set_if = "$IcingaCheckMSSQLResource_Switchparameter_NoPerfData$"
        }
        "SqlUsername" = {
            value = "$IcingaCheckMSSQLResource_String_SqlUsername$"
        }
        "IntegratedSecurity" = {
            set_if = "$IcingaCheckMSSQLResource_Switchparameter_IntegratedSecurity$"
        }
        "PageLifeExpectancyWarning" = {
            value = "$IcingaCheckMSSQLResource_Object_PageLifeExpectancyWarning$"
        }
        "PageLifeExpectancyCritical" = {
            value = "$IcingaCheckMSSQLResource_Object_PageLifeExpectancyCritical$"
        }
        "BufferCacheHitRatioWarning" = {
            value = "$IcingaCheckMSSQLResource_Object_BufferCacheHitRatioWarning$"
        }
        "Verbosity" = {
            value = "$IcingaCheckMSSQLResource_Int32_Verbosity$"
        }
        "SqlHost" = {
            value = "$IcingaCheckMSSQLResource_String_SqlHost$"
        }
        "SqlDatabase" = {
            value = "$IcingaCheckMSSQLResource_String_SqlDatabase$"
        }
    }
    vars.ifw_api_command = "invoke-icingacheckmssqlresource"
    vars.IcingaCheckMSSQLResource_Switchparameter_NoPerfData = false
}
