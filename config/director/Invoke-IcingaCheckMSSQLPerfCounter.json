{"DataList":{"IcingaCheckMSSQLPerfCounter Verbosity":{"list_name":"IcingaCheckMSSQLPerfCounter Verbosity","originalId":"2","entries":[{"allowed_roles":null,"entry_value":"0","entry_name":"0","format":"string"},{"allowed_roles":null,"entry_value":"1","entry_name":"1","format":"string"},{"allowed_roles":null,"entry_value":"2","entry_name":"2","format":"string"},{"allowed_roles":null,"entry_value":"3","entry_name":"3","format":"string"}],"owner":"stein"},"PowerShell ExecutionPolicies":{"list_name":"PowerShell ExecutionPolicies","originalId":"2","entries":[{"allowed_roles":null,"entry_value":"AllSigned","entry_name":"AllSigned","format":"string"},{"allowed_roles":null,"entry_value":"Bypass","entry_name":"Bypass","format":"string"},{"allowed_roles":null,"entry_value":"Default","entry_name":"Default","format":"string"},{"allowed_roles":null,"entry_value":"RemoteSigned","entry_name":"RemoteSigned","format":"string"},{"allowed_roles":null,"entry_value":"Restricted","entry_name":"Restricted","format":"string"},{"allowed_roles":null,"entry_value":"Undefined","entry_name":"Undefined","format":"string"},{"allowed_roles":null,"entry_value":"Unrestricted","entry_name":"Unrestricted","format":"string"}],"owner":"stein"}},"Command":{"PowerShell Base":{"methods_execute":"PluginCheck","object_name":"PowerShell Base","vars":{"IcingaPowerShellBase_String_ExecutionPolicy":"ByPass"},"is_string":null,"command":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","zone":null,"disabled":false,"fields":[{"datafield_id":2,"is_required":"n","var_filter":null}],"arguments":{"-ExecutionPolicy":{"value":"$IcingaPowerShellBase_String_ExecutionPolicy$","order":"-1"},"-NoProfile":{"value":"-NoProfile","skip_key":true,"order":"-3"},"-NoLogo":{"value":"-NoLogo","skip_key":true,"order":"-2"}},"imports":[],"object_type":"object","timeout":"180"},"Invoke-IcingaCheckMSSQLPerfCounter":{"fields":[{"datafield_id":4,"is_required":"n","var_filter":null},{"datafield_id":5,"is_required":"n","var_filter":null},{"datafield_id":6,"is_required":"n","var_filter":null},{"datafield_id":7,"is_required":"n","var_filter":null},{"datafield_id":8,"is_required":"n","var_filter":null},{"datafield_id":9,"is_required":"n","var_filter":null},{"datafield_id":10,"is_required":"n","var_filter":null},{"datafield_id":11,"is_required":"n","var_filter":null},{"datafield_id":12,"is_required":"n","var_filter":null},{"datafield_id":13,"is_required":"n","var_filter":null},{"datafield_id":14,"is_required":"n","var_filter":null},{"datafield_id":15,"is_required":"n","var_filter":null}],"object_name":"Invoke-IcingaCheckMSSQLPerfCounter","arguments":{"-NoPerfData":{"set_if":"$IcingaCheckMSSQLPerfCounter_Switchparameter_NoPerfData$","set_if_format":"string","order":"99"},"-Verbosity":{"value":"$IcingaCheckMSSQLPerfCounter_Int32_Verbosity$","order":"10"},"-PerformanceCounter":{"value":{"body":"var arr = macro(\"$IcingaCheckMSSQLPerfCounter_Array_PerformanceCounter$\");\r\n\r\nif (len(arr) == 0) {\r\n    return \"@()\";\r\n}\r\n\r\nvar psarr = arr.map(\r\n    x =\u003e if (typeof(x) == String) {\r\n        var argLen = len(x);\r\n        if (argLen != 0 \u0026\u0026 x.substr(0,1) == \"\u0027\" \u0026\u0026 x.substr(argLen - 1, argLen) == \"\u0027\") {\r\n            x;\r\n        } else {\r\n            \"\u0027\" + x + \"\u0027\";\r\n        }\r\n    } else {\r\n        x;\r\n    }\r\n).join(\",\");\r\n\r\nreturn \"@(\" + psarr + \")\";","type":"Function"},"order":"4"},"-C":{"value":"try { Use-Icinga -Minimal; } catch { Write-Output \u0027The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details\u0027; Write-Output \u0027Error:\u0027 $$($$_.Exception.Message)Components:`r`n$$( Get-Module -ListAvailable \u0027icinga-powershell-*\u0027 )`r`n\u0027Module-Path:\u0027`r`n$$($$Env:PSModulePath); exit 3; }; Exit-IcingaExecutePlugin -Command \u0027Invoke-IcingaCheckMSSQLPerfCounter\u0027 ","order":"0"},"-ThresholdInterval":{"set_if":"var str = macro(\"$IcingaCheckMSSQLPerfCounter_String_ThresholdInterval$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckMSSQLPerfCounter_String_ThresholdInterval$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"100"},"-SqlPort":{"value":"$IcingaCheckMSSQLPerfCounter_Int32_SqlPort$","order":"8"},"-Warning":{"value":"$IcingaCheckMSSQLPerfCounter_Object_Warning$","order":"2"},"-IntegratedSecurity":{"set_if":"$IcingaCheckMSSQLPerfCounter_Switchparameter_IntegratedSecurity$","set_if_format":"string","order":"99"},"-SqlUsername":{"set_if":"var str = macro(\"$IcingaCheckMSSQLPerfCounter_String_SqlUsername$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckMSSQLPerfCounter_String_SqlUsername$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"5"},"-SqlHost":{"set_if":"var str = macro(\"$IcingaCheckMSSQLPerfCounter_String_SqlHost$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckMSSQLPerfCounter_String_SqlHost$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"7"},"-Critical":{"value":"$IcingaCheckMSSQLPerfCounter_Object_Critical$","order":"3"},"-SqlPassword":{"value":"(ConvertTo-IcingaSecureString \u0027$IcingaCheckMSSQLPerfCounter_Securestring_SqlPassword$\u0027)","order":"6"},"-SqlDatabase":{"set_if":"var str = macro(\"$IcingaCheckMSSQLPerfCounter_String_SqlDatabase$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckMSSQLPerfCounter_String_SqlDatabase$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"9"}},"imports":["PowerShell Base"],"object_type":"object","vars":{"IcingaCheckMSSQLPerfCounter_Switchparameter_IntegratedSecurity":false,"ifw_api_arguments":{"SqlPort":{"value":"$IcingaCheckMSSQLPerfCounter_Int32_SqlPort$"},"ThresholdInterval":{"value":"$IcingaCheckMSSQLPerfCounter_String_ThresholdInterval$"},"Warning":{"value":"$IcingaCheckMSSQLPerfCounter_Object_Warning$"},"NoPerfData":{"set_if":"$IcingaCheckMSSQLPerfCounter_Switchparameter_NoPerfData$"},"SqlPassword":{"value":"$IcingaCheckMSSQLPerfCounter_Securestring_SqlPassword$"},"Critical":{"value":"$IcingaCheckMSSQLPerfCounter_Object_Critical$"},"IntegratedSecurity":{"set_if":"$IcingaCheckMSSQLPerfCounter_Switchparameter_IntegratedSecurity$"},"PerformanceCounter":{"value":"$IcingaCheckMSSQLPerfCounter_Array_PerformanceCounter$"},"SqlUsername":{"value":"$IcingaCheckMSSQLPerfCounter_String_SqlUsername$"},"SqlHost":{"value":"$IcingaCheckMSSQLPerfCounter_String_SqlHost$"},"SqlDatabase":{"value":"$IcingaCheckMSSQLPerfCounter_String_SqlDatabase$"},"Verbosity":{"value":"$IcingaCheckMSSQLPerfCounter_Int32_Verbosity$"}},"ifw_api_command":"Invoke-IcingaCheckMSSQLPerfCounter","IcingaCheckMSSQLPerfCounter_Switchparameter_NoPerfData":false}}},"Datafield":{"7":{"settings":{"visibility":"visible"},"description":"List of Performance Counters specified by their full path (example \u0027\\SQLServer:Buffer Manager\\Buffer cache hit ratio\u0027)\nto fetch information for","caption":"PerformanceCounter","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeArray","originalId":"7","varname":"IcingaCheckMSSQLPerfCounter_Array_PerformanceCounter","format":null},"5":{"settings":{"visibility":"visible"},"description":"The warning threshold of the Performance Counter return values","caption":"Warning","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"5","varname":"IcingaCheckMSSQLPerfCounter_Object_Warning","format":null},"12":{"settings":{"visibility":"visible"},"description":"The name of a specific database to connect to. Leave empty to connect \"globally\"","caption":"SqlDatabase","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"12","varname":"IcingaCheckMSSQLPerfCounter_String_SqlDatabase","format":null},"10":{"settings":{"visibility":"visible"},"description":"The IP address or FQDN to the MSSQL server to connect to","caption":"SqlHost","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"10","varname":"IcingaCheckMSSQLPerfCounter_String_SqlHost","format":null},"2":{"settings":{"datalist":"PowerShell ExecutionPolicies","behavior":"strict","data_type":"string"},"description":"Defines with which Execution Policy the PowerShell is started","caption":"PowerShell Execution Policy","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeDatalist","originalId":"2","varname":"IcingaPowerShellBase_String_ExecutionPolicy","format":null},"8":{"settings":{"visibility":"visible"},"description":"The username for connecting to the MSSQL database","caption":"SqlUsername","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"8","varname":"IcingaCheckMSSQLPerfCounter_String_SqlUsername","format":null},"11":{"settings":{"visibility":"visible"},"description":"The port of the MSSQL server/instance to connect to with the provided credentials","caption":"SqlPort","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeNumber","originalId":"11","varname":"IcingaCheckMSSQLPerfCounter_Int32_SqlPort","format":null},"9":{"settings":{"visibility":"hidden"},"description":"The password for connecting to the MSSQL database as secure string","caption":"SqlPassword","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"9","varname":"IcingaCheckMSSQLPerfCounter_Securestring_SqlPassword","format":null},"14":{"settings":{"visibility":"visible"},"description":"Disables the performance data output of this plugin","caption":"NoPerfData","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"14","varname":"IcingaCheckMSSQLPerfCounter_Switchparameter_NoPerfData","format":null},"15":{"settings":{"datalist":"IcingaCheckMSSQLPerfCounter Verbosity","behavior":"strict","data_type":"string"},"description":"Changes the behavior of the plugin output which check states are printed:\n0 (default): Only service checks/packages with state not OK will be printed\n1: Only services with not OK will be printed including OK checks of affected check packages including Package config\n2: Everything will be printed regardless of the check state\n3: Identical to Verbose 2, but prints in addition the check package configuration e.g (All must be [OK])","caption":"Verbosity","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeDatalist","originalId":"15","varname":"IcingaCheckMSSQLPerfCounter_Int32_Verbosity","format":null},"6":{"settings":{"visibility":"visible"},"description":"The critical threshold of the Performance Counter return values","caption":"Critical","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"6","varname":"IcingaCheckMSSQLPerfCounter_Object_Critical","format":null},"4":{"settings":{"visibility":"visible"},"description":"Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/service/10-Register-Service-Checks/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring.","caption":"ThresholdInterval","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"4","varname":"IcingaCheckMSSQLPerfCounter_String_ThresholdInterval","format":null},"13":{"settings":{"visibility":"visible"},"description":"Allows this plugin to use the credentials of the current PowerShell session inherited by\nthe user the PowerShell is running with. If this is set and the user the PowerShell is\nrunning with can access to the MSSQL database you will not require to provide username\nand password","caption":"IntegratedSecurity","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"13","varname":"IcingaCheckMSSQLPerfCounter_Switchparameter_IntegratedSecurity","format":null}}}
